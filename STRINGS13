==============================
PROBLEM:
Compare symbols
==============================
Given a string S(input consisting) of ‘’ and ‘#’. The length of the string is variable.
The task is to find the minimum number of ‘’ or ‘#’ to make it a valid string. The string is considered valid if the number of ‘’ and ‘#’ are equal. 
The ‘’ and ‘#’ can be at any position in the string.

Input Format:
------------
Read a string

Constraints:
-----------
string

Output Format:
-------------
(>#): positive integer (#>): negative integer (#=*): 0

==============
Sample Input 0
==============
###***
===============
Sample Output 0
===============
0
==============
Sample Input 1
==============
**###*##*###
===============
Sample Output 1
===============
-4


========================
SUBMITTED CODE
LANGUAGE:C
========================
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    char s[50];
    scanf("%s",s);
    int a1=0,a2=0;
    for(int i=0;i<strlen(s);i++)
    {
        if(s[i]=='#')
        {
            a1++;
        }
        else 
        {
            a2++;
        }
    }
    printf("%d",a2-a1);
    return 0;
}
